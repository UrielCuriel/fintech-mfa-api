name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    environment: prod
    env:
      PIPELINE_ID: ${{ github.sha }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3


      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build the Docker image
        run: docker build . -t ${{ steps.login-ecr.outputs.registry }}/admin:${{ env.PIPELINE_ID }} -t ${{ steps.login-ecr.outputs.registry }}/admin:latest

      - name: Push the Docker image to Amazon ECR
        run: docker push --all-tags ${{ steps.login-ecr.outputs.registry }}/admin
  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment: prod
    steps:
    - name: Check out code
      uses: actions/checkout@v3

    - name: Generate deployment package
      run: zip deploy.zip Dockerrun.aws.json

    - name: Deploy to AWS Elastic BeanTalk
      uses: einaregilsson/beanstalk-deploy@v20
      with:
        aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        application_name: admin-client
        environment_name: Adminclient-env
        version_label: ${{ env.PIPELINE_ID }}
        use_existing_version_if_available: true
        region: ${{ env.AWS_REGION }}
        deployment_package: deploy.zip